
plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'war'
//    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group 'ru.itmo'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.7.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.10')
    implementation('org.hibernate:hibernate-core:5.4.25.Final')
    implementation 'org.postgresql:postgresql:42.1.4'
    // https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream
    implementation 'com.thoughtworks.xstream:xstream:1.4.2'
    // https://mvnrepository.com/artifact/javax/javaee-api
    compileOnly 'javax:javaee-api:8.0'
//    // https://mvnrepository.com/artifact/org.jboss.weld.servlet/weld-servlet
//    implementation("org.jboss.weld.servlet:weld-servlet:2.3.1.Final")
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.21"
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-validator
    implementation("org.hibernate:hibernate-validator:7.0.1.Final")
//    // https://mvnrepository.com/artifact/org.apache.tomcat.maven/tomcat6-maven-plugin
//    implementation("org.apache.tomcat.maven:tomcat6-maven-plugin:2.2")
//    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.25.1'

    // https://mvnrepository.com/artifact/javax.ejb/javax.ejb-api
    implementation("javax.ejb:javax.ejb-api:3.2.2")

    // https://mvnrepository.com/artifact/org.glassfish.corba/glassfish-corba-orb
//    implementation("org.glassfish.corba:glassfish-corba-orb:4.2.4")




    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    compile('org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.10')
}

test {
    useJUnitPlatform()
}

class EjbClientPlugin implements Plugin<Project> {
    void apply(Project project) {

        def extension = project.extensions.create("ejbClient", EjbClientExtension)

        project.afterEvaluate {
            project.apply(plugin: "kotlin")
            project.apply(plugin: "java")
            project.apply(plugin: "application")

            def ejbClientJar = project.task("ejbClientJar", type: Jar) { task ->
                task.classifier = "remote-ejb"
                task.from project.sourceSets.main.output
                extension.filters.each {
                    task.include it
                }

            }

            project.war.dependsOn(ejbClientJar)
        }
    }
}

//jar {
//
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}
//
//task customFatJar(type: Jar) {
//    manifest {
//        attributes 'Main-Class': 'com.baeldung.fatjar.Application'
//    }
//    baseName = 'soa_lab3-remote-ejb'
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}

class EjbClientExtension {
    String[] filters = [
            "**"
    ]
}

apply plugin: EjbClientPlugin

task explodedWar(type: Sync) {
    into "${buildDir}/exploded"
    with war

}
//war.dependsOn ejbClientJar